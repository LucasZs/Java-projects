public class FiveInARowChecker {
	private static final int numberOfEqualElements = 5;
	
	public static boolean isEndOfTheGame(char[][] field){
		return isHorizontalFive(field) || isVerticalFive(field) || isLeftDiagonalFive(field)|| isRightDiagonalFive(field);
	}
	
	public static boolean isHorizontalFive(char[][] field){
		boolean horizontalEnd = false;
		for (int i = 0; i < field.length; i++) {
			for (int j = 0; j < field[0].length - numberOfEqualElements; j++) {
				for (int k = 0; k <= numberOfEqualElements; k++) {
					if(field[i][j+k]=='O' || field[i][j+k]=='X'){
						horizontalEnd = true;
						break;
					}
				}
			}
		}
		return horizontalEnd;
	}
	
	public static boolean isVerticalFive(char[][] field){
		boolean verticalEnd = false;
		for (int i = 0; i < field.length - numberOfEqualElements; i++) {
			for (int j = 0; j < field[0].length; j++) {
				for (int k = 0; k <= numberOfEqualElements; k++) {
					if(field[i+k][j]=='O' || field[i+k][j]=='X'){
						verticalEnd = true;
						break;
					}
				}
			}
		}
		return verticalEnd;
	}
	
	public static boolean isLeftDiagonalFive(char[][] field){
		boolean leftDiagonalEnd = false;
		for (int i = 0; i < field.length - numberOfEqualElements; i++) {
			for (int j = 0; j < field[0].length - numberOfEqualElements; j++) {
				for (int k = 0; k <= numberOfEqualElements; k++) {
					if(field[i+k][j+k]=='O' || field[i+k][j+k]=='X'){
						leftDiagonalEnd = true;
						break;
					}
				}
			}
		}
		return leftDiagonalEnd;
	}
	
	public static boolean isRightDiagonalFive(char[][] field){
		boolean rightDiagonalEnd = false;
		for (int i = field.length - 1; i < numberOfEqualElements; i--) {
			for (int j = field[0].length - 1; j < numberOfEqualElements; j--) {
				for (int k = 0; k <= numberOfEqualElements; k++) {
					if(field[i-k][j-k]=='O' || field[i+k][j+k]=='X'){
						rightDiagonalEnd = true;
						break;
					}
				}
			}
		}
		return rightDiagonalEnd;
	}
	
	public static void main(String[] args) {
		char[][] inputMatrix1 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'X', 'X', 'X', 'X', 'X', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix2 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix3 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix4 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'X', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix5 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'O', 'O', 'O', 'O', 'O', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix6 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix7 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix8 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', 'O', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
    char[][] inputMatrix9 = new char[][] {
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' },
            { '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.' } };
            
    System.out.println(isEndOfTheGame(inputMatrix1));
    System.out.println(isEndOfTheGame(inputMatrix2));
    System.out.println(isEndOfTheGame(inputMatrix3));
    System.out.println(isEndOfTheGame(inputMatrix4));
    System.out.println(isEndOfTheGame(inputMatrix5));
    System.out.println(isEndOfTheGame(inputMatrix6));
    System.out.println(isEndOfTheGame(inputMatrix7));
    System.out.println(isEndOfTheGame(inputMatrix8));
    System.out.println(isEndOfTheGame(inputMatrix9));

	}
}
